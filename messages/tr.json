
{
  "Header": {
    "brand": "Güvenli Uygulama Geliştirme",
    "nav": {
      "principles": "İlkeler",
      "generator": "AI Kod Oluştur",
      "examples": "Örnekler",
      "checklist": "Kontrol Listesi"
    }
  },
  "Hero": {
    "title": "Güvenli Uygulama Geliştirme",
    "subtitle": "Temel yazılım güvenliği ilkelerini anlamak ve uygulamak için kapsamlı rehberiniz.",
    "cta": "İlkeleri Keşfedin"
  },
  "SecurityPrinciples": {
    "title": "Temel Güvenlik İlkeleri",
    "subtitle": "Bu temel kavramlar, güvenli yazılım geliştirmenin yapı taşlarıdır. Uygulamalarınızı ve kullanıcılarınızı korumak için bunları anlamak ve uygulamak çok önemlidir.",
    "learnMore": "Daha Fazla Bilgi",
    "principles": [
      {
        "title": "Girdi Kontrolü",
        "description": "Kullanıcı girdisine asla güvenmeyin. Whitelist yaklaşımı ve parametreli sorgularla enjeksiyonu önleyin.",
        "details": [
          "Whitelist yaklaşımı benimseyin, sadece izin verilen karakterleri kabul edin.",
          "Doğrulama için Regex kullanın (örn: e-posta formatı).",
          "Prepared statement ile SQL sorgularını güvenli hale getirin."
        ],
        "modalContent": {
          "paragraph": "Girdi kontrolü, SQL Injection ve Cross-Site Scripting (XSS) gibi saldırılara karşı ilk savunma hattıdır. Bir kullanıcıdan alınan verilerin işlenmeden önce beklenen formatlara uygunluğunu sağlamayı içerir. Sadece bilinen iyi karakterlere izin veren whitelist yaklaşımı, kötü niyetli girdileri engellemeye çalışan blacklist yaklaşımından çok daha güvenlidir. Veritabanı etkileşimlerinde, kullanıcı girdisinin çalıştırılabilir kod değil, veri olarak ele alınmasını sağlamak için daima prepared statement veya parametreli sorgular kullanın."
        }
      },
      {
        "title": "Kimlik Doğrulama",
        "description": "Güçlü politikalar, çok faktörlü kimlik doğrulama ve güvenli token yönetimi ile kullanıcı kimliğini doğrulayın.",
        "details": [
          "Güçlü parola politikaları (uzunluk, karmaşıklık) ve hash (bcrypt) uygulayın.",
          "Çok Faktörlü Kimlik Doğrulama (MFA) uygulayın, tercihen uygulama tabanlı OTP ile.",
          "JWT'lerin bir son kullanma süresi olduğundan ve issuer/audience doğrulaması yapıldığından emin olun."
        ],
        "modalContent": {
          "paragraph": "Kimlik doğrulama, bir kullanıcının kimliğini teyit eder. Bu, karmaşıklık ve minimum uzunluk gerektiren güçlü bir parola politikasıyla başlar. Parolalar asla düz metin olarak saklanmamalıdır; bcrypt veya Argon2 gibi güçlü, tuzlanmış (salted) bir hashing algoritması kullanılmalıdır. Çok Faktörlü Kimlik Doğrulama (MFA) kritik bir ikinci güvenlik katmanı ekler. JSON Web Token (JWT) kullanırken, her zaman kısa bir son kullanma süresi uygulayın ve token'ın kötüye kullanılmasını önlemek için sunucuda issuer (iss) ve audience (aud) iddialarını doğrulayın."
        }
      },
      {
        "title": "Yetkilendirme",
        "description": "Kimliği doğrulanmış bir kullanıcının ne yapmasına izin verildiğini En Az Ayrıcalık İlkesi'ne göre uygulayın.",
        "details": [
          "Yönetilebilir izinler için Rol Tabanlı Erişim Kontrolü (RBAC) uygulayın.",
          "En Az Ayrıcalık İlkesi'ni uygulayın; yalnızca gerekli izinleri verin.",
          "Her hassas istek için API seviyesinde yetkilendirme kontrolleri yapın."
        ],
        "modalContent": {
          "paragraph": "Yetkilendirme, kimliği doğrulanmış bir kullanıcının izinlerini belirler. Rol Tabanlı Erişim Kontrolü (RBAC), bu izinleri verimli bir şekilde yönetmek için standart bir modeldir. Temel kavram En Az Ayrıcalık İlkesi'dir: bir kullanıcı veya servis, işlevini yerine getirmek için yalnızca minimum gerekli izinlere sahip olmalıdır. Bu, kullanıcıların yetkileri olmayan verilere erişmesini veya eylemleri gerçekleştirmesini önlemek için her istekte, özellikle API seviyesinde, sunucu tarafında zorunlu kılınmalıdır."
        }
      },
      {
        "title": "Güvenli Hata Yönetimi",
        "description": "Kullanıcıya hassas bilgileri sızdırmadan güvenli bir şekilde hata yönetimi yapın. Detaylı hataları sunucuda günlüğe kaydedin.",
        "details": [
          "Kullanıcıya 'Bir hata oluştu' gibi genel hata mesajları gösterin.",
          "Stack trace dahil olmak üzere detaylı hata günlüklerini yalnızca sunucuda tutun.",
          "Stack trace veya sistem detaylarını asla istemciye yönelik hatalarda göstermeyin."
        ],
        "modalContent": {
          "paragraph": "Güvenli hata yönetimi, bilgi sızıntısını önlemek için kritik öneme sahiptir. Saldırganlar, sisteminizin mimarisi, kullandığınız framework'ler ve potansiyel güvenlik açıkları hakkında bilgi edinmek için ayrıntılı hata mesajlarını kullanabilirler. Bu nedenle, kullanıcılar yalnızca genel, bilgilendirici olmayan hata mesajları görmelidir. Stack trace'ler ve hata ayıklama bilgileri de dahil olmak üzere ayrıntılı günlükler, geliştiricilerin analiz etmesi için yalnızca güvenli, sunucu taraflı bir günlük sistemine yazılmalıdır."
        }
      },
      {
        "title": "Oturum Yönetimi",
        "description": "Kullanıcı oturumlarını güvenli çerez bayrakları, zaman aşımları ve uygun geçersiz kılma ile koruyun.",
        "details": [
          "Oturum çerezlerinde HttpOnly ve Secure bayraklarını ayarlayın.",
          "Makul bir oturum zaman aşımı uygulayın (örn: 15-30 dakika hareketsizlik).",
          "Çıkış yapıldığında token'ları ve oturumları uygun şekilde geçersiz kılın."
        ],
        "modalContent": {
          "paragraph": "Doğru oturum yönetimi, oturum kaçırma (session hijacking) saldırılarını önlemenin anahtarıdır. Oturum çerezleri, JavaScript'ten erişimi engellemek için 'HttpOnly' bayrağıyla ve yalnızca HTTPS üzerinden gönderilmelerini sağlamak için 'Secure' bayrağıyla yapılandırılmalıdır. Bir oturum zaman aşımı uygulamak, aktif olmayan kullanıcıları otomatik olarak çıkarır ve bir saldırgan için fırsat penceresini azaltır. Son olarak, çıkış yapmanın yalnızca istemci tarafında değil, sunucu tarafında da oturumu uygun şekilde geçersiz kıldığından emin olun."
        }
      },
      {
        "title": "Kriptografi",
        "description": "Güçlü, endüstri standardı kriptografik algoritmalar ve güvenli anahtar yönetimi kullanın.",
        "details": [
          "Simetrik şifreleme için AES-256-GCM kullanın.",
          "Asimetrik şifreleme için RSA-2048 veya ECC kullanın.",
          "Aktarım halindeki veriler için TLS 1.2+ zorunlu kılın ve HSTS başlıkları kullanın."
        ],
        "modalContent": {
          "paragraph": "Kriptografi, verilerin gizliliğini ve bütünlüğünü korur. Her zaman iyi incelenmiş, standart algoritmalar kullanın. Simetrik şifreleme için GCM modlu AES-256 önerilen standarttır. Anahtar değişimi gibi asimetrik senaryolar için RSA-2048 veya Eliptik Eğri Kriptografisi (ECC) kullanın. Aktarım halindeki tüm veriler TLS 1.2 veya üstü kullanılarak şifrelenmelidir. Tarayıcıların sitenize yalnızca HTTPS üzerinden bağlanmasını zorunlu kılmak için HSTS (HTTP Strict Transport Security) başlığı kullanılmalıdır."
        }
      },
      {
        "title": "DevSecOps",
        "description": "Güvenlik uygulamalarını kodlamadan dağıtıma kadar tüm geliştirme yaşam döngüsüne entegre edin.",
        "details": [
          "Kod birleştirmeden önce SAST (Statik Analiz) taramalarını entegre edin.",
          "Dağıtımdan önce DAST (Dinamik Analiz) ve bağımlılık taramaları çalıştırın.",
          "API anahtarlarının ve token'ların sızmasını önlemek için gizli anahtar tespiti uygulayın."
        ],
        "modalContent": {
          "paragraph": "DevSecOps, güvenliği yazılım geliştirme yaşam döngüsünün her aşamasına otomatikleştirme ve entegre etme uygulamasıdır. Bu, yazılırken kodu güvenlik açıkları için taramak üzere Statik Uygulama Güvenliği Testi (SAST) araçlarını ve çalışan uygulamayı test etmek için Dinamik Uygulama Güvenliği Testi (DAST) araçlarını kullanmayı içerir. CI/CD ardışık düzeninde bağımlılık taramasını ve gizli anahtar tespitini otomatikleştirmek, güvenlik açıklarını ve sızdırılmış kimlik bilgilerini üretime ulaşmadan önce yakalamaya yardımcı olur."
        }
      },
      {
        "title": "Veri Koruma",
        "description": "Veriyi yaşam döngüsü boyunca koruyun; toplamayı en aza indirin ve durağan/hareketli halde güvence altına alın.",
        "details": [
          "Topladığınız ve sakladığınız verileri en aza indirin.",
          "Verileri hassasiyete göre sınıflandırın ve uygun kontrolleri uygulayın.",
          "Açık bir veri saklama ve imha politikanız olsun."
        ],
        "modalContent": {
          "paragraph": "Veri koruma, bilgilerin yetkisiz erişim, kullanım, ifşa, değiştirme veya yok edilmeye karşı korunmasını içerir. Bu, yalnızca kesinlikle gerekli olanı toplamakla başlar - veri minimizasyonu. Veriler, veritabanlarında Kişisel Olarak Tanımlanabilir Bilgilerin (PII) şifrelenmesi gibi doğru düzeyde güvenlik uygulamak için hassasiyetlerine göre sınıflandırılmalıdır. Verilerin artık gerekmediğinde güvenli ve kalıcı olarak silinmesini sağlamak için resmi bir saklama politikası kritik öneme sahiptir, bu da 'saldırı yüzeyini' azaltır."
        }
      },
      {
        "title": "Güvenli Yapılandırma",
        "description": "Teknoloji yığınınızın tüm bileşenlerini, sunuculardan ve framework'lerden bulut hizmetlerine kadar sağlamlaştırın.",
        "details": [
          "Varsayılan kimlik bilgilerini ve kullanılmayan hizmetleri kaldırın.",
          "Tüm yazılımları, kütüphaneleri ve bağımlılıkları güncel tutun.",
          "Yapılandırmaları düzenli olarak güvenlik zayıflıkları açısından denetleyin."
        ],
        "modalContent": {
          "paragraph": "Birçok sistem varsayılan olarak güvensizdir. Güvenli yapılandırma, teknoloji yığınının her katmanını sağlamlaştırmayı içerir. Bu, varsayılan şifreleri değiştirmek, gereksiz özellikleri veya portları devre dışı bırakmak ve ayarları mümkün olduğunca kısıtlayıcı olacak şekilde yapılandırmak anlamına gelir. Bu, işletim sistemleri, web sunucuları, veritabanları ve bulut hizmeti yapılandırmaları (S3 bucket izinleri gibi) için geçerlidir. Güçlü bir güvenlik duruşu sürdürmek, zamanla 'yapılandırma kaymasını' önlemek için düzenli yama ve otomatik denetimler gerektirir."
        }
      },
      {
        "title": "Günlük Kaydı ve İzleme",
        "description": "Güvenlik olaylarını tespit etmek, araştırmak ve müdahale etmek için kapsamlı günlük kaydı uygulayın.",
        "details": [
          "Tüm kimlik doğrulama denemelerini (başarılı ve başarısız) günlüğe kaydedin.",
          "Erişim kontrolü hatalarını ve girdi doğrulama hatalarını izleyin.",
          "Günlüklerin kurcalanmaya karşı korunduğundan ve analiz için merkezileştirildiğinden emin olun."
        ],
        "modalContent": {
          "paragraph": "Göremediğiniz şeye karşı savunma yapamazsınız. Etkili günlük kaydı ve izleme, şüpheli etkinlikleri tespit etmek ve bir olaydan sonra adli analiz için kritik öneme sahiptir. Günlüğe kaydedilecek önemli olaylar arasında kimlik doğrulama denemeleri, erişim kontrolü kararları (özellikle başarısızlıklar) ve şifre değişiklikleri gibi yüksek riskli eylemler bulunur. Bu günlükler, anormallikler açısından izlenebilecekleri ve gerçek zamanlı olarak potansiyel saldırıları belirlemek için ilişkilendirilebilecekleri güvenli bir merkezi sistemde saklanmalıdır."
        }
      }
    ]
  },
  "CodeSnippetGenerator": {
    "title": "Kod Parçacığı Oluşturucu",
    "subtitle": "Yapay zeka kullanarak pratik bir kod örneği oluşturmak için bir güvenlik ilkesi ve bir programlama dili seçin.",
    "form": {
      "securityPrinciple": {
        "label": "Güvenlik İlkesi",
        "placeholder": "Bir ilke seçin",
        "required": "Lütfen bir güvenlik ilkesi seçin."
      },
      "programmingLanguage": {
        "label": "Programlama Dili",
        "placeholder": "Bir dil seçin",
        "required": "Lütfen bir programlama dili seçin."
      },
      "button": {
        "generate": "Oluştur",
        "generating": "Oluşturuluyor..."
      }
    },
    "generatedCodeTitle": "Oluşturulan Kod:",
    "toast": {
      "title": "Oluşturma Başarısız",
      "description": "Kod parçacığı oluşturulamadı."
    }
  },
  "RealWorldExamples": {
    "title": "Gerçek Dünya Örnekleri",
    "subtitle": "Geçmişten öğrenmek, güvenli bir geleceğin anahtarıdır. İşte bazı yüksek profilli ihlaller ve bize öğrettikleri dersler.",
    "vulnerabilityLabel": "Zafiyet",
    "impactLabel": "Etki",
    "lessonLabel": "Anahtar Ders",
    "readMore": "Devamını Oku",
    "examples": [
      {
        "id": "heartbleed",
        "title": "Heartbleed (OpenSSL)",
        "vulnerability": "OpenSSL'de bellek sızıntısı (Heartbleed)",
        "impact": "Özel anahtarlar ve kullanıcı kimlik bilgileri de dahil olmak üzere sunucu belleğinden hassas verileri ifşa etti.",
        "lesson": "Temel kütüphanelerde bile kritik kusurlar olabilir. Tüm sistem bileşenlerini ve kütüphaneleri yamalı ve güncel tutun.",
        "modalContent": {
          "paragraph": "Heartbleed hatası, OpenSSL kriptografik kütüphanesindeki ciddi bir güvenlik açığıydı. Saldırganların sunucuların belleğini okumasına olanak tanıyarak oturum token'ları, parolalar ve sunucunun özel anahtarları gibi hassas bilgileri ifşa ediyordu. Bu olay, güvenliğin yığının her bileşenine bağlı olduğunu ve bağımlılıkları güncel tutmanın güvenli bir duruşu sürdürmek için tartışılamaz olduğunu güçlü bir şekilde hatırlattı.",
          "imageUrl": "https://picsum.photos/seed/servers/600/400",
          "imageHint": "sunucu odası"
        }
      },
      {
        "id": "log4shell",
        "title": "Log4Shell (Log4j)",
        "vulnerability": "Log4j'de Uzaktan Kod Yürütme (Log4Shell)",
        "impact": "Sayısız sunucuda kimlik doğrulaması olmadan uzaktan kod yürütülmesine izin vererek çok çeşitli yazılımları etkiledi.",
        "lesson": "Açık kaynak bağımlılık güvenliği kritiktir. Tedarik zinciri güvenlik açıkları çok büyük ve anında bir etkiye sahip olabilir.",
        "modalContent": {
          "paragraph": "Log4Shell, popüler bir Java günlükleme kütüphanesi olan Log4j'deki bir sıfır gün güvenlik açığıydı. İstismarı inanılmaz derecede kolaydı ve saldırganların kütüphanenin günlüğe kaydedeceği hazırlanmış bir dize göndererek sunucularda keyfi kod yürütmesine olanak tanıyordu. Bu, tedarik zinciri saldırılarının muazzam riskini vurguladı ve savunmasız bileşenleri hızla belirleyip yamamak için Yazılım Malzeme Listesi (SBOM) ve sağlam bağımlılık taramasının gerekliliğini vurguladı.",
          "imageUrl": "https://picsum.photos/seed/supplychain/600/400",
          "imageHint": "yazılım tedarik zinciri"
        }
      },
      {
        "id": "solarwinds",
        "title": "SolarWinds Saldırısı",
        "vulnerability": "Ele geçirilmiş derleme sunucusu (SolarWinds)",
        "impact": "Yazılım güncellemelerine kötü amaçlı kod enjekte edildi ve devlet kurumları da dahil olmak üzere binlerce kuruluşa bir arka kapı oluşturuldu.",
        "lesson": "Yazılım derleme ve tedarik zincirini güvence altına almak, uygulamanın kendisini güvence altına almak kadar önemlidir. Güven her adımda doğrulanmalıdır.",
        "modalContent": {
          "paragraph": "SolarWinds saldırısı, derleme sürecinde Orion yazılımına kötü amaçlı kodun enjekte edildiği karmaşık bir tedarik zinciri saldırısıydı. Bu Truva atı içeren güncelleme daha sonra imzalandı ve müşterilere dağıtıldı. Binlerce yüksek değerli ağa sızmak için saldırganlara bir arka kapı oluşturdu. Bu ihlal, derleme sunucusu bütünlüğü, bağımlılık doğrulaması ve imzalı yapılar da dahil olmak üzere CI/CD ardışık düzeninde uçtan uca güvenliğin gerekliliğini vurguladı.",
          "imageUrl": "https://picsum.photos/seed/cloud/600/400",
          "imageHint": "bulut güvenliği"
        }
      },
      {
        "id": "moveit",
        "title": "MOVEit İhlali (2023)",
        "vulnerability": "MOVEit Transfer'de SQL Enjeksiyonu",
        "impact": "2.700'den fazla kuruluştan veri hırsızlığı, 90 milyondan fazla kişiyi etkiledi.",
        "lesson": "Üçüncü parti yazılımlar saldırı yüzeyinizin bir parçasıdır ve düzenli olarak denetlenmelidir.",
        "modalContent": {
          "paragraph": "2023'te, popüler bir dosya transfer aracı olan MOVEit Transfer yazılımında kritik bir SQL enjeksiyonu zafiyeti keşfedildi. Bir fidye yazılımı çetesi, bu sıfır gün zafiyetini kullanarak dünya çapında binlerce kuruluştan büyük miktarda hassas veri çaldı. Olay, üçüncü parti yazılımlarla ilişkili önemli riskleri ve tedarik zinciri zafiyetleri için hızlı bir müdahale planına sahip olmanın önemini vurguladı.",
          "imageUrl": "https://picsum.photos/seed/data-transfer/600/400",
          "imageHint": "veri transferi"
        }
      },
      {
        "id": "lastpass",
        "title": "LastPass İhlali (2022)",
        "vulnerability": "Ele geçirilmiş geliştirici kimlik bilgileri",
        "impact": "Şifrelenmiş müşteri parola kasalarının çalınması, tüm kullanıcıların ana parolalarını değiştirmesi gerekti.",
        "lesson": "Derinlemesine savunma (Defense-in-depth) kritiktir. Tek bir zayıf nokta (örneğin bir geliştiricinin bilgisayarı) bir dizi güvenlik başarısızlığına yol açabilir.",
        "modalContent": {
          "paragraph": "2022'deki LastPass ihlali, bir DevOps mühendisinin ev bilgisayarının ele geçirilmesiyle başlayan çok aşamalı bir saldırıydı. Saldırganlar, daha sonra müşteri kasa verilerini içeren bulut tabanlı yedek depolama alanına erişmek için kullandıkları kurumsal kimlik bilgilerini çaldılar. Olay, geliştirici ortamlarını güvence altına almanın ve kritik altyapı için katı, çok katmanlı erişim kontrolleri uygulamanın önemini gösteren sert bir ders oldu.",
          "imageUrl": "https://picsum.photos/seed/password-vault/600/400",
          "imageHint": "parola kasası"
        }
      },
      {
        "id": "okta",
        "title": "Okta İhlali (2023)",
        "vulnerability": "Destek sistemi için çalınan kimlik bilgileri",
        "impact": "Saldırganlar, hassas oturum token'ları içeren destek dosyalarına erişerek kullanıcıları taklit etti.",
        "lesson": "İkincil bir sisteme (destek portalı gibi) yapılan saldırı, birincil hizmeti tehlikeye atmak için bir basamak olabilir. Tüm sistemler sağlam güvenlik gerektirir.",
        "modalContent": {
          "paragraph": "Ekim 2023'te, kimlik yönetimi sağlayıcısı Okta, saldırganların çalınan kimlik bilgilerini kullanarak destek vaka sistemine eriştiği bir ihlal açıkladı. Müşteriler tarafından yüklenen ve oturum token'ları içeren HAR dosyalarını görüntüleyebildiler. Saldırganlar bu token'ları kullanıcı oturumlarını ele geçirmek ve müşteri hesaplarına yetkisiz erişim sağlamak için kullandılar. İhlal, bir sistemdeki bir zayıflığın tüm platformun güvenliğini baltalayabileceğinden, güvenliğin bütünsel olması gerektiğini vurguladı.",
          "imageUrl": "https://picsum.photos/seed/support-ticket/600/400",
          "imageHint": "destek bileti"
        }
      }
    ]
  },
  "SecurityChecklist": {
    "title": "Uygulama Güvenliği Kontrol Listesi",
    "subtitle": "Uygulamanızı yaygın güvenlik en iyi uygulamalarına karşı denetlemek için bu kontrol listesini kullanın. Öğeleri gözden geçirmek için her bölümü genişletin.",
    "categories": [
      {
        "title": "Web Uygulaması Güvenliği",
        "items": [
          {
            "text": "Parametreli sorgularla SQL enjeksiyonunu önleyin.",
            "description": "Kullanıcı girdisinin asla doğrudan SQL sorgularına birleştirilmediğinden emin olun."
          },
          {
            "text": "Siteler Arası Komut Dosyası Çalıştırmayı (XSS) önlemek için çıktıyı kodlayın.",
            "description": "Kullanıcı tarafından sağlanan tüm verileri kullanıcı arayüzünde oluşturmadan önce temizleyin ve kodlayın."
          },
          {
            "text": "Formlarda Anti-CSRF belirteçleri uygulayın.",
            "description": "Durum değiştiren isteklerin uygulamanızdan geldiğini doğrulamak için gizli belirteçler kullanın."
          },
          {
            "text": "İçerik Güvenliği Politikası (CSP) başlıklarını etkinleştirin.",
            "description": "Tarayıcıların yüklemesine izin verilen betikler ve stiller gibi içerik kaynaklarını kısıtlayın."
          }
        ]
      },
      {
        "title": "API Güvenliği",
        "items": [
          {
            "text": "Tüm uç noktalarda hız sınırlaması uygulayın.",
            "description": "İstek sıklığını sınırlayarak kötüye kullanımı ve hizmet reddi saldırılarını önleyin."
          },
          {
            "text": "Kimlik doğrulama için API anahtarları ve HMAC kullanın.",
            "description": "Sunucudan sunucuya iletişimi güçlü kimlik doğrulama mekanizmalarıyla güvence altına alın."
          },
          {
            "text": "Her istekte yetkilendirmeyi zorunlu kılın.",
            "description": "Kimliği doğrulanmış kullanıcının istenen eylem için izni olduğunu doğrulayın."
          },
          {
            "text": "Tüm API istekleri için ayrıntılı günlükler tutun.",
            "description": "Şüpheli etkinlikleri izlemek ve olay müdahalesine yardımcı olmak için istekleri ve yanıtları günlüğe kaydedin."
          }
        ]
      },
      {
        "title": "Mobil Uygulama Güvenliği",
        "items": [
          {
            "text": "Verileri cihazda güvenli bir şekilde saklayın.",
            "description": "Yerel olarak depolanan hassas verileri şifreleyin (örneğin, şifrelenmiş SharedPreferences/Keychain kullanarak)."
          },
          {
            "text": "Root/Jailbreak tespiti uygulayın.",
            "description": "Uygulamanızı daha fazla riske maruz bırakabilecek tehlikeye atılmış cihaz ortamlarını tespit etmek için kontroller ekleyin."
          },
          {
            "text": "API iletişimi için sertifika sabitleme (certificate pinning) kullanın.",
            "description": "Yalnızca belirli bir sunucu sertifikasına güvenerek ortadaki adam saldırılarına karşı korunun."
          },
          {
            "text": "Uygulamayı düzenli olarak kaynak koda dönüştürme (decompilation) testlerinden geçirin.",
            "description": "Bir saldırganın uygulamanızı tersine mühendislikle ne görebileceğini anlamak için MobSF gibi araçlar kullanın."
          }
        ]
      },
      {
        "title": "Bulut ve Konteyner Güvenliği",
        "items": [
          {
            "text": "IAM politikalarında 'en az ayrıcalık' ilkesini uygulayın.",
            "description": "Kullanıcıların ve hizmetlerin yalnızca çalışmak için gerekli olan minimum izinlere sahip olduğundan emin olun."
          },
          {
            "text": "Konteyner imajlarını güvenlik açıklarına karşı tarayın.",
            "description": "Dağıtımdan önce bilinen güvenlik sorunları için Docker imajlarını taramak üzere Trivy gibi araçlar kullanın."
          },
          {
            "text": "Konteynerları root olmayan kullanıcılar olarak çalıştırın.",
            "description": "Root ayrıcalıklarından kaçınarak bir konteyner ele geçirilmesinin potansiyel hasarını sınırlayın."
          },
          {
            "text": "Günlüklemeyi ve izlemeyi etkinleştirin (örneğin, CloudTrail).",
            "description": "Bulut ortamınızda gerçekleştirilen tüm eylemlerin ayrıntılı bir denetim izini tutun."
          }
        ]
      }
    ]
  },
  "Footer": {
    "copyright": "Güvenli Uygulama Geliştirme. Bu proje açık kaynaklıdır."
  },
  "CopyButton": {
    "copy": "Panoya kopyala",
    "copied": "Kopyalandı!"
  },
  "LanguageSwitcher": {
    "select": "Dil seçin"
  }
}
